#pragma once
#include<stdio.h>
#include<math.h>
#include<stdlib.h>
#include<string.h>
#include<string.h>
#include<stdio.h>
#include<stdbool.h>
#include<ctype.h>
#include<cstdio>
#define maxsize 10

//队列的结构声明
typedef struct 
{
	char data[maxsize];
	int front;
	int count;
}qutype;

//初始化队列
void initqueue(qutype*& qu)
{
	qu = (qutype*)malloc(sizeof(qutype));
	qu->front = 0;
	qu->count = 0;
}


//********************p103队列方式
//进队列
bool enqueue(qutype*& qu,char x)
{
	int rear;
	if (qu->count == maxsize)
		return false;
	else
	{
		rear = (qu->front + qu->count) % maxsize;
		//rear = (rear + 1) % maxsize;//与平时的不太一样 去掉这一条
		qu->data[rear] = x;
		qu->count++;
		return true;
	}
}

//出队列
bool dequeue(qutype*& qu, char &x)
{
	if (qu->count == 0)
		return false;
	else
	{
		qu->front = (qu->front + 1) % maxsize;
		x = qu->data[qu->front];
		qu->count--;
		return true;
	}
}

//队列为空的判断 是则为true
bool queueempty(qutype* qu)
{
	return(qu->count == 0);
}

//撤销队列
void destroyqueue(qutype* &qu)
{
	free(qu);
}

//声明栈
typedef struct
{
	char date[maxsize] = { '\0' };
	int top;
}sqstack;

//初始化栈
void initstack(sqstack*& s)//输入头节点
{
	s = (sqstack*)malloc(sizeof(sqstack));
	s->top = -1;
}

//撤销栈
void destroystack(sqstack*& s)
{
	free(s);
}

//判断栈是否为空
bool stackempty(sqstack* s)
{
	return(s->top == -1);
}

//进栈
bool push(sqstack*& s, char e)
{
	if (s->top == maxsize - 1)//判断栈是否满了
		return false;
	s->top++;
	s->date[s->top] = e;//输入元素e
	return true;
}

//出栈
bool pop(sqstack*& s, char& e)
{
	if (s->top == -1)
		return false;
	e = s->date[s->top];
	s->top--;
	return true;
}


void sum(qutype*& qu)
{
	char e;  
	sqstack *st;  
	initstack(st);  
	qu->data[8] = 'a';
	qu->data[9] = 'b';
	qu->data[0] = 'c';
	qu->data[1] = 'd';
	qu->data[2] = 'e';
	qu->data[3] = 'f';
	qu->front = 7;
	qu->count= 6;
	while (!queueempty(qu))  
	{ 
		dequeue(qu,e);   
	    push(st,e);  
	}  
	initqueue(qu);   
	while (!stackempty(st))  
	{ 
		pop(st,e);   
		enqueue(qu,e);  
	}  
	destroystack(st);
} 

int main()
{
	int i;
	qutype *qu;
	initqueue(qu);
	sum(qu);
	printf("完成，输入任意数字并回车则关闭窗口");
	scanf_s("%d",&i);
}